{"version":3,"sources":["kendo.taskboard.js"],"names":["f","define","$","undefined","kendo","window","extend","proxy","ToolBar","ui","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","CHANGE","NS","TaskBoardToolbarStyles","searchbox","searchInputPrefix","searchIcon","searchInput","TaskBoardToolBar","init","element","options","that","this","_extendOptions","fn","call","_attachEvents","events","concat","defaultTools","addColumn","type","text","name","command","icon","rules","spacer","search","overflow","bind","_click","_change","tools","items","Object","keys","_extendToolsOptions","messages","length","map","tool","toolOptions","isBuiltInTool","isPlainObject","attr","_validateRules","deepExtend","id","guid","attributes","aria-label","title","buttons","_mapButtonGroups","menuButtons","_mapMenuButtons","hidden","button","i","states","split","ev","target","action","value","val","isToolEnabled","toolName","found","args","trigger","destroy","SearchTool","styles","input","iconWrapper","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","placeholder","append","_bindEvents","addClass","_inputHandler","_input","on","off","registerComponent","taskboard","jQuery","amd","a1","a2","a3","preventDefault","Observable","DOT","BLUR","MOVE","MOVE_START","MOVE_END","TaskBoardColumnStyles","header","headerText","ellipsis","actions","cardsContainer","columnCards","actionButton","card","cardTitle","sortableSuffix","textbox","newColumn","editColumn","disabled","dragPlaceholder","dragHint","ignoreDrag","grabbingCursor","TaskBoardColumn","dataItem","_dataItem","sortableUniqueClass","sortableIdentifier","_render","isReorderable","_initSortable","empty","container","addCard","cardHtml","edit","_renderEditHeader","getDataItem","cards","children","template","editTemplate","builtinButtons","deleteColumn","defaultButtons","headerLabelId","uid","css","width","appendTo","_renderHeader","format","dataTextField","_buildActionsHtml","html","setTimeout","find","spriteCssClass","_actionClick","closest","_textboxBlur","keyCode","ENTER","isRtl","dirClass","sortable","Sortable","ignore","connectWith","filter","hint","clone","offsetWidth","height","offsetHeight","move","_move","start","_start","end","_end","change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","newIndex","oldIndex","TaskBoardNewColumn","Column","NewColumn","TaskBoardCardStyles","hbox","link","cardMenuButton","flatButton","body","actionsIcon","moveCursor","categoryBorder","headerActions","TaskBoardCard","resources","headerTemplate","bodyTemplate","cardMenuButtonTemplate","categoryColor","_buildTemplate","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","selectable","isSelectable","key","resource","field","cardResources","data","resourceIndex","cardResource","dataIndex","resourceColor","result","getter","multiple","dataSource","view","valuePrimitive","dataValueField","dataColorField","push","dataTitleField","dataDescriptionField","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","item","_append","_extendItem","menu","isEmptyObject","CardMenu","Class","TaskBoardCommand","_confirm","content","okText","cancel","confirm","fakePromise","taskboardOptions","editable","confirmation","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","taskBoardOptions","dataOrderField","currentCard","cardIndex","idx","prevCard","SelectCardCommand","SaveChangesCommand","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPaneStyles","preview","footerActions","footerActionButtons","footerButton","primary","TaskBoardPane","_commandClick","buttonTemplate","contentTemplate","delete","saveChanges","create","buttonsContainer","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","TaskBoardPreviewPane","previewPane","_contentTemplate","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","KEYDOWN","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","mac","navigator","platform","indexOf","metaKey","KeyboardManager","TaskBoardStyles","wrapper","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","SELECT","EXECUTE","ERROR","DATABINDING","DATABOUND","EDIT_CARD","SAVE_CARD","DELETE_CARD","EDIT_COLUMN","SAVE_COLUMN","DELETE_COLUMN","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","close","description","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","toolbarElm","toolbarOptions","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","dataSourceInstance","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"mappings":"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","file":"kendo.taskboard.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('taskboard/toolbar', ['kendo.toolbar'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, ToolBar = kendo.ui.ToolBar, Item = kendo.toolbar.Item, CLICK = 'click', TOGGLE = 'toggle', CLOSE = 'close', ACTION = 'action', CHANGE = 'change', NS = '.taskBoardToolbar';\n        var TaskBoardToolbarStyles = {\n            searchbox: 'k-searchbox',\n            searchInputPrefix: 'k-input-prefix',\n            searchIcon: 'k-icon k-i-search',\n            searchInput: 'k-input'\n        };\n        var TaskBoardToolBar = ToolBar.extend({\n            init: function (element, options) {\n                var that = this;\n                that._extendOptions(options);\n                ToolBar.fn.init.call(that, element, options);\n                that._attachEvents();\n            },\n            events: ToolBar.fn.events.concat([ACTION]),\n            defaultTools: {\n                addColumn: {\n                    type: 'button',\n                    text: 'Add Column',\n                    name: 'addColumn',\n                    command: 'AddColumnCommand',\n                    icon: 'plus',\n                    rules: 'isEditable'\n                },\n                spacer: { type: 'spacer' },\n                search: {\n                    type: 'TaskBoardSearch',\n                    text: 'Search',\n                    name: 'search',\n                    command: 'SearchCommand',\n                    icon: 'search',\n                    overflow: 'never',\n                    rules: 'isSearchable'\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.bind(TOGGLE, proxy(that._click, that));\n                that.bind(CLOSE, proxy(that._click, that));\n                that.bind(CLICK, proxy(that._click, that));\n                that.bind(CHANGE, proxy(that._change, that));\n            },\n            _extendOptions: function (options) {\n                var that = this, tools = options.items ? options.items : Object.keys(that.defaultTools);\n                that.options = options;\n                that.options.items = that._extendToolsOptions(tools);\n            },\n            _extendToolsOptions: function (tools) {\n                var that = this, messages = that.options.messages;\n                if (!tools.length) {\n                    return;\n                }\n                return tools.map(function (tool) {\n                    var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name, attr = {}, toolOptions;\n                    tool = isBuiltInTool ? tool.name : tool;\n                    toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool] || {\n                        name: tool,\n                        command: tool + 'Command',\n                        type: 'button'\n                    });\n                    if (!that._validateRules(toolOptions)) {\n                        return { hidden: true };\n                    }\n                    attr[kendo.attr('command')] = toolOptions.command;\n                    attr[kendo.attr('options')] = toolOptions.options;\n                    kendo.deepExtend(toolOptions, {\n                        id: toolOptions.id || toolOptions.name + '-' + kendo.guid(),\n                        name: toolOptions.name,\n                        text: messages[toolOptions.name] || toolOptions.name,\n                        attributes: extend({\n                            'aria-label': messages[toolOptions.name] || toolOptions.name,\n                            'title': messages[toolOptions.name]\n                        }, attr),\n                        overflow: toolOptions.overflow\n                    });\n                    if (toolOptions.type === 'buttonGroup') {\n                        toolOptions.buttons = toolOptions.buttons.map(proxy(that._mapButtonGroups, that));\n                    }\n                    if (toolOptions.type === 'splitButton') {\n                        toolOptions.menuButtons = toolOptions.menuButtons.map(proxy(that._mapMenuButtons, that));\n                    }\n                    return toolOptions;\n                }, that);\n            },\n            _mapButtonGroups: function (button) {\n                var that = this, messages = that.options.messages, attr = {};\n                attr[kendo.attr('command')] = button.command;\n                attr[kendo.attr('options')] = button.options;\n                return kendo.deepExtend(button, {\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name]\n                    }, attr)\n                });\n            },\n            _mapMenuButtons: function (button) {\n                var that = this, messages = that.options.messages, attr = {};\n                attr[kendo.attr('command')] = button.command;\n                attr[kendo.attr('options')] = button.options;\n                return kendo.deepExtend(button, {\n                    text: messages[button.name],\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name]\n                    }, attr)\n                });\n            },\n            _validateRules: function (tool) {\n                var that = this, states = that.options.states, rules = tool.rules ? tool.rules.split(';') : [];\n                if (!rules.length) {\n                    return true;\n                }\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            _click: function (ev) {\n                var command = $(ev.target).attr(kendo.attr('command')), options = $(ev.target).attr(kendo.attr('options'));\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            _change: function (ev) {\n                var command = $(ev.target).attr(kendo.attr('command')), options = $(ev.target).attr(kendo.attr('options'));\n                options = extend({}, options, { value: $(ev.target).val() });\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            isToolEnabled: function (toolName) {\n                var that = this, options = that.options, found = false;\n                for (var i = 0; i < options.items.length; i++) {\n                    if (options.items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n                return options.items[toolName] || found;\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            },\n            destroy: function () {\n                if (this.search) {\n                    this.search.destroy();\n                }\n                ToolBar.fn.destroy.call(this);\n            }\n        });\n        var SearchTool = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, styles = TaskBoardToolBar.styles, element = $('<span class=\\'' + styles.searchbox + '\\'></span>'), input = $('<input class=\\'' + styles.searchInput + '\\' autocomplete=\\'off\\' />'), iconWrapper = $('<span class=\\'' + styles.searchInputPrefix + '\\'></span>'), icon = $('<span></span>');\n                that.element = element;\n                that.input = input;\n                that.iconWrapper = iconWrapper;\n                that.icon = icon;\n                that.options = options;\n                that.options.type = 'taskBoardSearch';\n                that.toolbar = toolbar;\n                that.attributes();\n                that.renderIcon();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.input.attr({\n                    placeholder: that.options.text,\n                    title: that.options.text\n                });\n                that.iconWrapper.append(icon);\n                that.element.append(iconWrapper).append(that.input);\n                that._bindEvents();\n                that.toolbar.search = that;\n            },\n            attributes: function () {\n                if (this.options.attributes) {\n                    this.input.attr(this.options.attributes);\n                }\n            },\n            renderIcon: function () {\n                if (this.options.icon) {\n                    this.icon.addClass(TaskBoardToolBar.styles.searchIcon);\n                }\n            },\n            _bindEvents: function () {\n                this._inputHandler = proxy(this._input, this);\n                this.input.on('input' + NS, this._inputHandler);\n            },\n            _input: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.target });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('TaskBoardSearch', SearchTool);\n        extend(kendo.ui, { taskboard: { ToolBar: TaskBoardToolBar } });\n        extend(true, kendo.ui.taskboard.ToolBar, { styles: TaskBoardToolbarStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('taskboard/column', ['kendo.sortable'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Observable = kendo.Observable, extend = $.extend, proxy = $.proxy, DOT = '.', NS = DOT + 'kendoTaskBoardColumn', CLICK = 'click', BLUR = 'blur', MOVE = 'move', MOVE_START = 'moveStart', MOVE_END = 'moveEnd', CHANGE = 'change', ACTION = 'action';\n        var TaskBoardColumnStyles = {\n            element: 'k-taskboard-column',\n            header: 'k-taskboard-column-header',\n            headerText: 'k-taskboard-column-header-text',\n            ellipsis: 'k-text-ellipsis',\n            spacer: 'k-spacer',\n            actions: 'k-taskboard-column-header-actions',\n            cardsContainer: 'k-taskboard-column-cards-container',\n            columnCards: 'k-taskboard-column-cards',\n            actionButton: 'k-taskboard-column-action-button',\n            button: 'k-button k-button-icon k-flat',\n            card: 'k-taskboard-card',\n            cardTitle: 'k-card-title',\n            sortableSuffix: '-kendosortable',\n            textbox: 'k-textbox',\n            input: 'k-input',\n            newColumn: 'k-taskboard-column-new',\n            editColumn: 'k-taskboard-column-edit',\n            disabled: 'k-state-disabled',\n            dragPlaceholder: 'k-taskboard-drag-placeholder',\n            dragHint: 'k-taskboard-drag-hint',\n            ignoreDrag: 'k-taskboard-drag-ignore',\n            grabbingCursor: 'k-cursor-grabbing'\n        };\n        function preventDefault(ev) {\n            ev.preventDefault();\n        }\n        var TaskBoardColumn = Observable.extend({\n            init: function (options, dataItem) {\n                var that = this;\n                that._dataItem = dataItem;\n                that.options = extend(true, {}, options);\n                that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n                that._render();\n                that._attachEvents();\n                if (options.states.isReorderable) {\n                    that._initSortable();\n                }\n                Observable.fn.init.call(that);\n            },\n            empty: function () {\n                var that = this;\n                that.container.empty();\n            },\n            addCard: function (cardHtml) {\n                var that = this;\n                that.container.append(cardHtml);\n            },\n            edit: function () {\n                var that = this, styles = TaskBoardColumn.styles;\n                that.element.addClass(styles.editColumn);\n                that._renderEditHeader();\n            },\n            getDataItem: function () {\n                return this._dataItem;\n            },\n            cards: function () {\n                var that = this;\n                return that.container.children();\n            },\n            template: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">{0}</div>' + '<span class=\"#: styles.spacer #\"></span>' + '#=buttons#',\n            editTemplate: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">' + '<span class=\"#: styles.textbox #\">' + '<input class=\"#: styles.input #\" placeholder=\"#: {0} ? messages.editColumn : messages.newColumn #\" #:kendo.attr(\"command\")#=\"SaveColumnCommand\" value=\"#:{0}#\" />' + '</span>' + '</div>' + '<span class=\"#: styles.spacer #\"></span>' + '#=buttons#',\n            actionButton: '<button class=\"#: styles.actionButton # #: styles.button #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #if(options){##:kendo.attr(\"options\")#=\"#:options#\"#}#>' + '<i class=\"#:icon# #:spriteCssClass#\"></i>' + '</button>',\n            builtinButtons: {\n                'editColumn': {\n                    name: 'editColumn',\n                    icon: 'edit',\n                    text: 'Edit Column',\n                    command: 'EditColumnCommand',\n                    rules: 'isEditable'\n                },\n                'addCard': {\n                    name: 'addCard',\n                    icon: 'add',\n                    text: 'Add Card',\n                    command: 'AddCardCommand',\n                    rules: 'isEditable'\n                },\n                'deleteColumn': {\n                    name: 'deleteColumn',\n                    icon: 'close',\n                    text: 'Delete Column',\n                    command: 'DeleteColumnCommand',\n                    rules: 'isEditable'\n                }\n            },\n            defaultButtons: [\n                'editColumn',\n                'addCard',\n                'deleteColumn'\n            ],\n            _render: function () {\n                var that = this, styles = TaskBoardColumn.styles, headerLabelId = kendo.guid(), element = $('<div class=\\'' + styles.element + '\\'></div>').attr(kendo.attr('uid'), that._dataItem.uid).css({ width: that.options.width }).attr('role', 'list').attr('aria-labelledby', headerLabelId), header = $('<div class=\\'' + styles.header + '\\'></div>'), cardsContainer = $('<div class=\\'' + styles.cardsContainer + '\\'></div>'), columnCards = $('<div class=\\'' + styles.columnCards + '\\'></div>');\n                that.header = header.appendTo(element).attr('id', headerLabelId);\n                that._renderHeader();\n                cardsContainer.appendTo(element);\n                that.container = columnCards.appendTo(cardsContainer).addClass(that.sortableUniqueClass);\n                that.element = element;\n            },\n            _renderHeader: function () {\n                var that = this, styles = TaskBoardColumn.styles, options = that.options, template = options.template ? options.template : kendo.format(that.template, '#:' + options.dataTextField + '#');\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    buttons: that._buildActionsHtml()\n                }, that._dataItem)));\n            },\n            _renderEditHeader: function () {\n                var that = this, styles = TaskBoardColumn.styles, options = that.options, template = options.editTemplate ? options.editTemplate : kendo.format(that.editTemplate, options.dataTextField);\n                that.header.html('');\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    messages: options.messages,\n                    buttons: that._buildActionsHtml()\n                }, that._dataItem)));\n                setTimeout(function () {\n                    that.header.find('input').trigger('focus');\n                }, 0);\n                that.header.find(DOT + styles.actions).addClass(styles.disabled);\n            },\n            _buildActionsHtml: function () {\n                var that = this, options = that.options, messages = options.messages, buttons = options.buttons || that.defaultButtons, styles = TaskBoardColumn.styles, html = '<div class=\\'' + styles.actions + '\\'>';\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = $.isPlainObject(button) && Object.keys(button).length === 1 && button.name ? button.name : button;\n                    if (typeof button === 'string') {\n                        button = extend(true, {}, that.builtinButtons[button] || {\n                            spriteCssClass: button,\n                            command: button + 'Command'\n                        }, { text: messages[button] || button });\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button, { text: messages[button.name] });\n                    }\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n                    var icon = button.icon ? 'k-icon k-i-' + button.icon : '';\n                    button.icon = icon;\n                    button.spriteCssClass = button.spriteCssClass || '';\n                    html += kendo.template(that.actionButton)(extend(true, {}, {\n                        styles: styles,\n                        options: false\n                    }, button));\n                }\n                html += '</div>';\n                return html;\n            },\n            _validateRules: function (tool) {\n                var that = this, states = that.options.states, rules = tool.rules ? tool.rules.split(';') : [];\n                if (!rules.length) {\n                    return true;\n                }\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            _actionClick: function (ev) {\n                var that = this, target = $(ev.target).closest('[' + kendo.attr('command') + ']'), command = target.attr(kendo.attr('command')), options = target.attr(kendo.attr('options'));\n                options = typeof options === 'string' ? { value: options } : options;\n                if (!command) {\n                    return;\n                }\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n            _textboxBlur: function (ev) {\n                var that = this, target = $(ev.target).closest('[' + kendo.attr('command') + ']'), command = target.attr(kendo.attr('command')), options = target.attr(kendo.attr('options'));\n                options = typeof options === 'string' ? { value: options } : options;\n                if (!command) {\n                    return;\n                }\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.header.on(CLICK + NS, DOT + TaskBoardColumn.styles.actionButton, proxy(that._actionClick, that));\n                that.header.on(BLUR + NS, DOT + TaskBoardColumn.styles.input, proxy(that._textboxBlur, that));\n                that.header.on('keyup' + NS, DOT + TaskBoardColumn.styles.input, function (ev) {\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        that._textboxBlur(ev);\n                    }\n                });\n                if (that.container) {\n                    that.container.on(CLICK + NS, DOT + TaskBoardColumn.styles.card + ' [' + kendo.attr('command') + ']', proxy(that._actionClick, that));\n                    that.container.on(CLICK + NS, DOT + TaskBoardColumn.styles.card + ' a.' + TaskBoardColumn.styles.cardTitle, preventDefault);\n                }\n            },\n            _initSortable: function () {\n                var that = this, isRtl = that.options.states.isRtl, dirClass = isRtl ? ' k-rtl' : '', container = that.container;\n                if (!that.container) {\n                    return;\n                }\n                that.sortable = new ui.Sortable(container, {\n                    ignore: DOT + TaskBoardColumn.styles.ignoreDrag + ' *',\n                    connectWith: DOT + that.sortableUniqueClass,\n                    filter: DOT + TaskBoardColumn.styles.card,\n                    hint: function (element) {\n                        return element.clone().addClass(TaskBoardColumn.styles.dragHint + ' ' + TaskBoardColumn.styles.grabbingCursor + dirClass).css({\n                            width: element[0].offsetWidth,\n                            height: element[0].offsetHeight\n                        });\n                    },\n                    placeholder: function (element) {\n                        return $('<div></div>').addClass(TaskBoardColumn.styles.dragPlaceholder).css({ height: element[0].offsetHeight });\n                    },\n                    move: proxy(that._move, that),\n                    start: proxy(that._start, that),\n                    end: proxy(that._end, that),\n                    change: proxy(that._change, that)\n                });\n                that.sortable.draggable.userEvents.unbind('select');\n                that.sortable.draggable.userEvents.bind('select', proxy(that._select, that));\n            },\n            _select: function (ev) {\n                var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n                var target = $(ev.event.target);\n                for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                    if (target.is(ignoreDragSelectors[i])) {\n                        ev.preventDefault();\n                        break;\n                    }\n                }\n            },\n            _move: function (ev) {\n                extend(ev, { columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element) });\n                this.trigger(MOVE, ev);\n            },\n            _start: function (ev) {\n                extend(ev, { columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element) });\n                this.trigger(MOVE_START, ev);\n            },\n            _end: function (ev) {\n                extend(ev, { columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element) });\n                this.trigger(MOVE_END, ev);\n            },\n            _change: function (ev) {\n                var that = this;\n                extend(ev, { columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element) });\n                that.trigger(CHANGE, ev);\n                if (ev.action === 'receive' && ev.newIndex >= 0 || ev.action === 'sort' && ev.newIndex !== ev.oldIndex) {\n                    that.trigger(ACTION, {\n                        command: 'MoveCardCommand',\n                        options: ev\n                    });\n                }\n            },\n            destroy: function () {\n                var that = this;\n                that.header.off(NS);\n                that.container.off(NS);\n                if (that.sortable) {\n                    that.sortable.destroy();\n                }\n            }\n        });\n        var TaskBoardNewColumn = TaskBoardColumn.extend({\n            _render: function () {\n                var that = this, styles = TaskBoardColumn.styles, element = $('<div class=\\'' + styles.element + '\\'></div>').addClass(styles.newColumn).attr(kendo.attr('uid'), that._dataItem.uid), header = $('<div class=\\'' + styles.header + '\\'></div>');\n                that.header = header.appendTo(element);\n                that._renderEditHeader();\n                that.element = element;\n            }\n        });\n        extend(kendo.ui.taskboard, {\n            Column: TaskBoardColumn,\n            NewColumn: TaskBoardNewColumn\n        });\n        extend(true, kendo.ui.taskboard.Column, {\n            styles: TaskBoardColumnStyles,\n            ignoreDragSelectors: ['img']\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('taskboard/card', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, Observable = kendo.Observable, extend = $.extend;\n        var TaskBoardCardStyles = {\n            element: 'k-taskboard-card',\n            card: 'k-card',\n            header: 'k-card-header',\n            hbox: 'k-hbox',\n            title: 'k-card-title',\n            link: 'k-link',\n            spacer: 'k-spacer',\n            button: 'k-button',\n            cardMenuButton: 'k-taskboard-card-menu-button k-button-icon',\n            flatButton: 'k-flat',\n            body: 'k-card-body',\n            actionsIcon: 'k-icon k-i-more-vertical',\n            moveCursor: 'k-cursor-move',\n            categoryBorder: 'k-taskboard-card-category',\n            headerActions: 'k-card-header-actions',\n            disabled: 'k-state-disabled'\n        };\n        var TaskBoardCard = Observable.extend({\n            init: function (options, dataItem, resources) {\n                var that = this;\n                that._dataItem = dataItem;\n                that.resources = resources;\n                that.options = extend(true, {}, options);\n                that._render();\n                Observable.fn.init.call(that);\n            },\n            headerTemplate: '<div class=\"#:styles.header# #:styles.hbox#\">' + '<a class=\"#:styles.title# #:styles.link#\" href=\"\\\\#\" #if(selectable){##:kendo.attr(\"command\")#=\"SelectCardCommand\"#}#>#:{0}#</a>' + '<span class=\"#:styles.spacer#\"></span>' + '#=cardMenuButton#' + '</div>',\n            bodyTemplate: '<div class=\"#:styles.body#\"><p>#:{0}#</p></div>',\n            cardMenuButtonTemplate: '<div class=\"#:styles.headerActions#\"><button class=\"#:styles.button# #:styles.flatButton# #:styles.cardMenuButton#\">' + '<span class=\"#:styles.actionsIcon#\"></span>' + '</button></div>',\n            _render: function () {\n                var that = this, options = that.options, styles = TaskBoardCard.styles, template = options.template || that._buildTemplate(), element = $('<div class=\\'' + styles.element + ' ' + styles.card + ' ' + styles.moveCursor + '\\'></div>'), cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : '', resources = that._resources(that._dataItem), borderDir = options.states.isRtl ? 'borderRightColor' : 'borderLeftColor', categoryColor;\n                element.attr(kendo.attr('uid'), that._dataItem.uid).attr('aria-disabled', !options.states.isDisabled).attr('role', 'listitem').toggleClass(styles.disabled, options.states.isDisabled);\n                categoryColor = resources[options.dataCategoryField] && resources[options.dataCategoryField].color || that._dataItem.get(options.dataCategoryField);\n                if (categoryColor) {\n                    element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n                }\n                element.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                    selectable: options.states.isSelectable,\n                    resources: resources\n                }, that._dataItem)));\n                that.element = element;\n            },\n            _resources: function (card) {\n                var that = this, resources = {};\n                if (!that.resources) {\n                    return resources;\n                }\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n                    if (!cardResources) {\n                        continue;\n                    }\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n                    var data = resource.dataSource.view();\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n                        var value = cardResources[resourceIndex];\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n            _buildTemplate: function () {\n                var that = this, options = that.options, headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField), bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n                return headerTemplate + bodyTemplate;\n            }\n        });\n        extend(kendo.ui.taskboard, { Card: TaskBoardCard });\n        extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('taskboard/cardmenu', ['kendo.menu'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, template = kendo.template, ContextMenu = kendo.ui.ContextMenu, ACTION = 'action';\n        var TaskBoardCardMenu = ContextMenu.extend({\n            init: function (element, options) {\n                var that = this;\n                ContextMenu.fn.init.call(that, element, options);\n                that._overrideTemplates();\n                that._extendItems();\n                that.bind('select', proxy(that._onSelect, that));\n                that.bind('open', proxy(that._onOpen, that));\n                that.bind('activate', proxy(that._focus, that));\n            },\n            _overrideTemplates: function () {\n                this.templates.sprite = template('#if(spriteCssClass) {#<span class=\\'#: spriteCssClass #\\'></span>#}#');\n            },\n            defaultItems: {\n                'editCard': {\n                    name: 'editCard',\n                    text: 'Edit card',\n                    icon: 'edit',\n                    command: 'EditCardCommand',\n                    rules: 'isEditable'\n                },\n                'deleteCard': {\n                    name: 'deleteCard',\n                    text: 'Delete card',\n                    icon: 'delete',\n                    command: 'DeleteCardCommand',\n                    rules: 'isEditable'\n                }\n            },\n            events: ContextMenu.fn.events.concat([ACTION]),\n            _extendItems: function () {\n                var that = this, items = that.options.items, item, isBuiltInTool;\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n                        if ($.isPlainObject(item)) {\n                            that._append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._append(item);\n                        } else if (typeof item === 'string') {\n                            item = {\n                                name: item,\n                                text: item,\n                                spriteCssClass: item,\n                                command: item + 'Command'\n                            };\n                            that._append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._append(item);\n                    }\n                }\n            },\n            _append: function (item) {\n                var that = this;\n                that._extendItem(item);\n                if (that._validateRules(item)) {\n                    that.append(item);\n                }\n            },\n            _extendItem: function (item) {\n                var that = this, messages = that.options.messages, icon = item.icon ? 'k-icon k-i-' + item.icon : '', attr = {};\n                attr[kendo.attr('command')] = item.command;\n                if (item.options) {\n                    attr[kendo.attr('options')] = item.options;\n                }\n                extend(item, {\n                    text: messages[item.name],\n                    spriteCssClass: icon + ' ' + item.spriteCssClass || '',\n                    attr: attr,\n                    uid: kendo.guid()\n                });\n            },\n            _validateRules: function (tool) {\n                var that = this, states = that.options.states, rules = tool.rules ? tool.rules.split(';') : [];\n                if (!rules.length) {\n                    return true;\n                }\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            _onSelect: function (ev) {\n                var command = $(ev.item).attr(kendo.attr('command')), options = $(ev.item).attr(kendo.attr('options')), target = $(ev.target);\n                options = typeof options === 'string' ? { value: options } : options;\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n            _onOpen: function (ev) {\n                var menu = ev.sender, items = menu.options.items;\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n            _focus: function (ev) {\n                if (ev.sender) {\n                    ev.sender.element.trigger('focus');\n                }\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            }\n        });\n        extend(kendo.ui.taskboard, { CardMenu: TaskBoardCardMenu });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('taskboard/commands', ['kendo.dialog'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, isPlainObject = $.isPlainObject, Class = kendo.Class;\n        var TaskBoardCommand = Class.extend({\n            init: function (options) {\n                this.options = options;\n                this.taskboard = options.taskboard;\n            },\n            _confirm: function (title, content, okText, cancel) {\n                var that = this, taskboard = that.taskboard, taskboardOptions = taskboard.options, confirm;\n                if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false) {\n                    var fakePromise = $.Deferred();\n                    fakePromise.resolve();\n                    return fakePromise;\n                }\n                confirm = $('<div></div>').kendoConfirm(extend({}, {\n                    title: title,\n                    content: content,\n                    messages: {\n                        okText: okText,\n                        cancel: cancel\n                    },\n                    buttonLayout: 'normal'\n                })).data('kendoConfirm');\n                confirm.open();\n                return confirm.result;\n            }\n        });\n        var AddColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard;\n                if (taskboard.trigger('editColumn', { column: null })) {\n                    return;\n                }\n                taskboard.columns().each(function (index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.addColumn();\n            }\n        });\n        var EditColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, options = that.options, taskboard = that.taskboard;\n                if (taskboard.trigger('editColumn', { column: options.column })) {\n                    return;\n                }\n                taskboard.columns().each(function (index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.editColumn(options.columnElement);\n            }\n        });\n        var DeleteColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, options = that.options, taskboard = that.taskboard, taskboardOptions = taskboard.options, messages = taskboardOptions.messages, columnDS = taskboard.columnsDataSource;\n                var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages['delete'], messages.cancel);\n                result.done(function () {\n                    if (taskboard.trigger('deleteColumn', { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n                    columnDS.remove(options.column);\n                    columnDS.sync();\n                });\n            }\n        });\n        var SaveColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, options = that.options, taskboard = that.taskboard, columnSettings = taskboard.options.columnSettings, columnDS = taskboard.columnsDataSource, column = options.column, text = options.target.val();\n                if (taskboard.trigger('saveColumn', { column: options.column })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n                column.set(columnSettings.dataTextField, text);\n                columnDS.sync();\n            }\n        });\n        var CancelEditColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, columnDS = taskboard.columnsDataSource;\n                columnDS.cancelChanges();\n            }\n        });\n        var MoveFocusCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, options = that.options, cardElement = options.cardElement, columnElement = options.columnElement, columns = taskboard.columns(), currentColumnIndex = columnElement.index(), direction = options.value, columnIndex, column;\n                switch (direction) {\n                case 'left':\n                    columnIndex = Math.max(0, currentColumnIndex - 1);\n                    break;\n                case 'right':\n                    columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                    break;\n                default:\n                    columnIndex = currentColumnIndex;\n                    break;\n                }\n                that.columns = columns;\n                that.columnIndex = columnIndex;\n                that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                that.cards = column.cards();\n                if (cardElement) {\n                    that._moveFromCardFocus(direction, cardElement);\n                } else if (columnElement && direction === 'down') {\n                    that.cards.eq(0).trigger('focus');\n                } else {\n                    columns.eq(columnIndex).trigger('focus');\n                }\n            },\n            _moveFromCardFocus: function (direction, cardElement) {\n                var that = this, currentIndex = cardElement.index(), focusCard, index, seekFocusableCard = false;\n                switch (direction) {\n                case 'up':\n                    index = currentIndex - 1;\n                    break;\n                case 'down':\n                    index = currentIndex + 1;\n                    break;\n                default:\n                    seekFocusableCard = true;\n                    index = currentIndex;\n                    break;\n                }\n                focusCard = that.cards.eq(index);\n                if (!focusCard.length && seekFocusableCard) {\n                    focusCard = that._getFocusableCard(index, direction);\n                }\n                if (index >= 0) {\n                    focusCard.trigger('focus');\n                } else {\n                    that.options.columnElement.focus();\n                }\n            },\n            _getFocusableCard: function (index, direction) {\n                var that = this, lastIndex = that.cards.length - 1, focusable = that.cards.eq(Math.min(index, lastIndex));\n                if (focusable.length) {\n                    return focusable;\n                }\n                if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                    return;\n                }\n                switch (direction) {\n                case 'left':\n                    that.columnIndex = Math.max(0, that.columnIndex - 1);\n                    break;\n                case 'right':\n                    that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                    break;\n                }\n                that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                that.cards = that.column.cards();\n                return that._getFocusableCard(index, direction);\n            }\n        });\n        var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n            _updateOrder: function (column, currentIndex) {\n                var that = this, taskboard = that.taskboard, taskBoardOptions = taskboard.options, dataOrderField = taskBoardOptions.dataOrderField, options = that.options, currentCard = options.card, cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length, newIndex = currentIndex, cards = column.cards().map(function (idx, card) {\n                        return taskboard.dataItem(card);\n                    }), prevCard = cards[cardIndex - 1], nextCard;\n                currentCard.set(dataOrderField, newIndex);\n                if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                    currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                }\n                for (var i = newIndex + 1; i < cards.length; i++) {\n                    nextCard = cards[i];\n                    if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                        nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                        currentCard = nextCard;\n                    } else {\n                        break;\n                    }\n                }\n            }\n        });\n        var SelectCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, options = that.options, cardElement = options.cardElement;\n                taskboard._select(cardElement, true);\n                cardElement.focus();\n            }\n        });\n        var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, taskBoardOptions = taskboard.options, options = that.options, receivedStatus = options.card.get(taskBoardOptions.dataStatusField), targetColumn = taskboard._getColumn(receivedStatus), activeElm = $(document.activeElement);\n                if (activeElm.length) {\n                    activeElm.trigger('change');\n                }\n                if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                    return;\n                }\n                if (taskboard.trigger('saveCard', { card: options.card })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n                if (targetColumn && taskBoardOptions.dataOrderField) {\n                    that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                }\n                taskboard.dataSource.sync().then(function () {\n                    taskboard.columns().eq(0).trigger('focus');\n                });\n            }\n        });\n        var DeleteCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, messages = taskboard.options.messages, options = that.options;\n                var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages['delete'], messages.cancel);\n                result.done(function () {\n                    if (taskboard.trigger('deleteCard', { card: options.card })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n                    taskboard.dataSource.remove(options.card);\n                    taskboard.dataSource.sync();\n                });\n            }\n        });\n        var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, taskBoardOptions = taskboard.options, columnSettings = taskBoardOptions.columnSettings, options = that.options, receivedStatus = options.column.get(columnSettings.dataStatusField);\n                options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n                if (taskBoardOptions.dataOrderField) {\n                    that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                }\n                taskboard.dataSource.sync();\n            }\n        });\n        var EditCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, options = that.options;\n                if (taskboard.trigger('editCard', { card: options.card })) {\n                    return;\n                }\n                taskboard._openPane(extend({ pane: 'Edit' }, options));\n            }\n        });\n        var AddCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard, options = that.options;\n                if (taskboard.trigger('editCard', { card: null })) {\n                    return;\n                }\n                taskboard.dataSource.cancelChanges();\n                taskboard._openPane(extend({ pane: 'Create' }, options));\n            }\n        });\n        var OpenPaneCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, options = that.options, taskboard = that.taskboard;\n                taskboard._openPane({\n                    pane: options.value,\n                    card: options.card,\n                    cardElement: options.cardElement,\n                    column: options.column,\n                    columnElement: options.columnElement\n                });\n            }\n        });\n        var ClosePaneCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, taskboard = that.taskboard;\n                taskboard._closePane();\n                taskboard.dataSource.cancelChanges();\n            }\n        });\n        var SearchCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this, value = that.options.value, taskboard = that.taskboard, taskboardOptions = taskboard.options, searchOptions = taskboardOptions.search, operator = searchOptions.operator, fields = searchOptions && searchOptions.fields || [\n                        taskboardOptions.dataTitleField,\n                        taskboardOptions.dataDescriptionField\n                    ], filters;\n                filters = that._buildFilters(fields, operator, value);\n                taskboard.dataSource.filter(filters);\n            },\n            _buildFilters: function (fields, operator, value) {\n                var filters = fields.map(function (field) {\n                    return {\n                        field: field,\n                        operator: operator,\n                        value: value\n                    };\n                });\n                return {\n                    logic: 'or',\n                    filters: filters\n                };\n            }\n        });\n        extend(kendo.ui.taskboard, {\n            Command: TaskBoardCommand,\n            commands: {\n                AddColumnCommand: AddColumnCommand,\n                EditColumnCommand: EditColumnCommand,\n                DeleteColumnCommand: DeleteColumnCommand,\n                SaveColumnCommand: SaveColumnCommand,\n                CancelEditColumnCommand: CancelEditColumnCommand,\n                OpenPaneCommand: OpenPaneCommand,\n                ClosePaneCommand: ClosePaneCommand,\n                SelectCardCommand: SelectCardCommand,\n                MoveFocusCommand: MoveFocusCommand,\n                SaveChangesCommand: SaveChangesCommand,\n                DeleteCardCommand: DeleteCardCommand,\n                MoveCardCommand: MoveCardCommand,\n                EditCardCommand: EditCardCommand,\n                AddCardCommand: AddCardCommand,\n                SearchCommand: SearchCommand\n            }\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('taskboard/pane', ['kendo.form'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, Observable = kendo.Observable, proxy = $.proxy, Form = kendo.ui.Form, DOT = '.', NS = DOT + 'kendoTaskBoardPane', ACTION = 'action', CLICK = 'click';\n        var TaskBoardPaneStyles = {\n            element: 'k-taskboard-pane',\n            edit: 'k-taskboard-edit-pane',\n            preview: 'k-taskboard-preview-pane',\n            header: 'k-taskboard-pane-header',\n            headerText: 'k-taskboard-pane-header-text',\n            spacer: 'k-spacer',\n            headerActions: 'k-taskboard-pane-header-actions',\n            button: 'k-button k-button-icon k-flat',\n            content: 'k-taskboard-pane-content',\n            footerActions: 'k-taskboard-pane-actions',\n            footerActionButtons: 'k-actions k-hstack k-justify-content-end',\n            footerButton: 'k-button k-button-icontext',\n            primary: 'k-primary'\n        };\n        var TaskBoardPane = Observable.extend({\n            init: function (taskboard, options, dataItem, resources) {\n                var that = this;\n                that.taskboard = taskboard;\n                that._dataItem = dataItem;\n                that.resources = resources;\n                that.options = extend(true, {}, options);\n                that._render();\n                that.element.on(CLICK + NS, '[' + kendo.attr('command') + ']', proxy(that._commandClick, that));\n                Observable.fn.init.call(that);\n            },\n            headerTemplate: '<div class=\"#:styles.headerText#\">{0}</div>' + '<span class=\"#:styles.spacer#\"></span>' + '<div class=\"#:styles.headerActions#\">' + '<button class=\"#:styles.button#\" title=\"#:messages.close#\" #:kendo.attr(\"command\")#=\"ClosePaneCommand\">' + '<span class=\"k-icon k-i-close\"></span>' + '</button>' + '</div>',\n            buttonTemplate: '<button class=\"#:styles.footerButton##if(primary){# #:styles.primary##}#\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #:kendo.attr(\"options\")#=\"#:options#\">' + '<span class=\"#:icon# #:spriteCssClass#\"></span>#:text#' + '</button>',\n            contentTemplate: '',\n            builtinButtons: {\n                'edit': {\n                    name: 'edit',\n                    icon: 'edit',\n                    text: 'Edit',\n                    primary: true,\n                    command: 'EditCardCommand',\n                    rules: 'isEditable'\n                },\n                'delete': {\n                    name: 'delete',\n                    icon: 'delete',\n                    text: 'Delete',\n                    command: 'DeleteCardCommand',\n                    rules: 'isEditable'\n                },\n                'cancel': {\n                    name: 'cancel',\n                    text: 'Cancel',\n                    command: 'ClosePaneCommand'\n                },\n                'saveChanges': {\n                    name: 'saveChanges',\n                    text: 'Save',\n                    command: 'SaveChangesCommand',\n                    primary: true,\n                    rules: 'isEditable'\n                },\n                'create': {\n                    name: 'create',\n                    text: 'Create',\n                    command: 'SaveChangesCommand',\n                    primary: true,\n                    rules: 'isEditable'\n                }\n            },\n            defaultButtons: [],\n            _render: function () {\n                var that = this, styles = TaskBoardPane.styles, element = $('<div class=\\'' + styles.element + '\\'></div>'), header = $('<div class=\\'' + styles.header + '\\'></div>'), content = $('<div class=\\'' + styles.content + '\\'></div>'), buttonsContainer = $('<div class=\\'' + styles.footerActions + ' ' + styles.footerActionButtons + '\\'></div>');\n                that.header = header.appendTo(element);\n                that._renderHeader();\n                that.content = content.appendTo(element);\n                that._renderContent();\n                that.buttonsContainer = buttonsContainer.appendTo(element);\n                that.buttonsContainer.append(that._buildButtonsHtml());\n                that.element = element;\n            },\n            _renderHeader: function () {\n                var that = this, styles = TaskBoardPane.styles, options = that.options, messages = options.messages, headerTemplate = options.headerTemplate ? options.headerTemplate : that._buildHeaderTemplate(), resources = that._resources(that._dataItem);\n                that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources\n                }, that._dataItem)));\n            },\n            _buildHeaderTemplate: function () {\n                var that = this;\n                return kendo.format(that.headerTemplate, '#:' + that.options.dataTitleField + '#');\n            },\n            _renderContent: function () {\n                var that = this, styles = TaskBoardPane.styles, options = that.options, messages = options.messages, contentTemplate = options.template || that.contentTemplate, resources = that._resources(that._dataItem);\n                that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources\n                }, that._dataItem)));\n            },\n            _resources: function (card) {\n                var that = this, resources = {};\n                if (!that.resources) {\n                    return resources;\n                }\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n                    if (!cardResources) {\n                        continue;\n                    }\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n                    var data = resource.dataSource.view();\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n                        var value = cardResources[resourceIndex];\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n            _buildButtonsHtml: function () {\n                var that = this, options = that.options, messages = options.messages, buttons = options.buttons || that.defaultButtons, styles = TaskBoardPane.styles, html = '';\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = $.isPlainObject(button) && Object.keys(button).length === 1 && button.name ? button.name : button;\n                    if (typeof button === 'string') {\n                        button = extend(true, {}, that.builtinButtons[button] || {\n                            spriteCssClass: button,\n                            command: button + 'Command'\n                        }, { text: messages[button] || button });\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button, { text: messages[button.name] });\n                    }\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n                    var icon = button.icon ? 'k-icon k-i-' + button.icon : '';\n                    button.icon = icon;\n                    button.spriteCssClass = button.spriteCssClass || '';\n                    html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                        styles: styles,\n                        messages: messages,\n                        primary: false,\n                        options: null\n                    }, button));\n                }\n                return html;\n            },\n            _commandClick: function (ev) {\n                var that = this, target = $(ev.target).closest('[' + kendo.attr('command') + ']'), command = target.attr(kendo.attr('command')), options = target.attr(kendo.attr('options')), card = that._dataItem;\n                options = typeof options === 'string' ? { value: options } : options;\n                if (!command) {\n                    return;\n                }\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ card: card }, options)\n                });\n            },\n            _validateRules: function (tool) {\n                var that = this, states = that.options.states, rules = tool.rules ? tool.rules.split(';') : [];\n                if (!rules.length) {\n                    return true;\n                }\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            destroy: function () {\n                var that = this;\n                that.element.off(NS);\n                that.element.remove();\n            }\n        });\n        var TaskBoardPreviewPane = TaskBoardPane.extend({\n            init: function (taskboard, options, dataItem, resources) {\n                var that = this;\n                options = extend({}, options.previewPane, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n                that.contentTemplate = kendo.format(that._contentTemplate, options.dataDescriptionField);\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n                that.element.addClass(TaskBoardPane.styles.preview);\n            },\n            _contentTemplate: '<p>#:{0}#</p>',\n            defaultButtons: [\n                'delete',\n                'edit'\n            ]\n        });\n        var TaskBoardEditPane = TaskBoardPane.extend({\n            init: function (taskboard, options, dataItem) {\n                var that = this;\n                options = extend({}, options.editable, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n                that.formSettings = extend(that.formSettings, {\n                    items: [\n                        {\n                            field: options.dataTitleField,\n                            label: options.messages[options.dataTitleField]\n                        },\n                        {\n                            field: options.dataDescriptionField,\n                            label: options.messages[options.dataDescriptionField]\n                        }\n                    ]\n                }, options.form);\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n                that.element.addClass(TaskBoardPane.styles.edit);\n            },\n            defaultButtons: [\n                'cancel',\n                'saveChanges'\n            ],\n            formSettings: { buttonsTemplate: '' },\n            _buildHeaderTemplate: function () {\n                var that = this;\n                return kendo.format(that.headerTemplate, that.options.messages.edit + ' #:' + that.options.dataTitleField + '#');\n            },\n            _renderContent: function () {\n                var that = this, options = that.options, styles = TaskBoardPane.styles, formSettings = options.form || that.formSettings, formLabelId = kendo.guid(), element = $('<div></div>').attr('role', 'form').attr('aria-labelledby', formLabelId);\n                that.header.find(DOT + styles.headerText).attr('id', formLabelId);\n                that.content.append(element);\n                that.form = new Form(element, extend({}, formSettings, { formData: that._dataItem }));\n                that.form.element.find('input').trigger('focus');\n            }\n        });\n        var TaskBoardCreatePane = TaskBoardEditPane.extend({\n            init: function (taskboard, options, dataItem, resources, column) {\n                var that = this, columnStatusField = options.columnSettings.dataStatusField, firstColumn = taskboard.columnsDataSource.view().at(0), status = column ? column[columnStatusField] : firstColumn[columnStatusField], clone = extend({}, dataItem);\n                dataItem = taskboard.dataSource.add();\n                dataItem.set(options.dataStatusField, status);\n                for (var key in clone) {\n                    dataItem.set(key, clone[key]);\n                }\n                TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n            },\n            _buildHeaderTemplate: function () {\n                var that = this;\n                return kendo.format(that.headerTemplate, that.options.messages.createNewCard);\n            },\n            defaultButtons: [\n                'cancel',\n                'create'\n            ]\n        });\n        extend(kendo.ui.taskboard, {\n            Pane: TaskBoardPane,\n            panes: {\n                Preview: TaskBoardPreviewPane,\n                Edit: TaskBoardEditPane,\n                Create: TaskBoardCreatePane\n            }\n        });\n        extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('taskboard/keyboard', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, Observable = kendo.Observable, proxy = $.proxy, extend = $.extend, DOT = '.', NS = DOT + 'kendoKeboardManager', KEYDOWN = 'keydown', ACTION = 'action';\n        var Keyboard = Observable.extend({\n            init: function (element) {\n                var that = this;\n                that.register = {};\n                that.element = element;\n                that._attachEvents();\n                Observable.fn.init.call(that);\n            },\n            registerShortcut: function (selector, shortcut, options) {\n                var that = this;\n                if (!that.register[selector]) {\n                    that.register[selector] = [];\n                }\n                if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                    shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n                }\n                that.register[selector].push({\n                    shortcut: extend({\n                        keyCode: null,\n                        ctrlKey: false,\n                        shiftKey: false,\n                        altKey: false\n                    }, shortcut),\n                    options: options\n                });\n            },\n            _attachEvents: function () {\n                var that = this, handler = proxy(that._handler, that);\n                that.element.on(KEYDOWN + NS, handler);\n            },\n            _handler: function (ev) {\n                var that = this, target = $(ev.target), shortcuts, action;\n                for (var selector in that.register) {\n                    if (target.is(selector)) {\n                        shortcuts = that.register[selector];\n                        action = that._getAction(shortcuts, ev);\n                        if (action) {\n                            that._trigger(action, ev);\n                            break;\n                        }\n                    }\n                }\n            },\n            _trigger: function (action, ev) {\n                var that = this, target = $(ev.target);\n                if (action.command) {\n                    that.trigger(ACTION, extend({}, ev, {\n                        command: action.command,\n                        options: extend({}, { target: target }, action.options)\n                    }));\n                }\n                if (action.handler) {\n                    action.handler(ev);\n                }\n            },\n            _getAction: function (shortcuts, ev) {\n                var that = this;\n                for (var i = 0; i < shortcuts.length; i++) {\n                    if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                        return shortcuts[i].options;\n                    }\n                }\n            },\n            _compareShortcut: function (shortcut, ev) {\n                var that = this;\n                for (var key in shortcut) {\n                    var result = false;\n                    switch (key) {\n                    case 'ctrlKey':\n                        result = shortcut[key] !== that._getShortcutModifier(ev);\n                        break;\n                    default:\n                        result = shortcut[key] !== ev[key];\n                        break;\n                    }\n                    if (result) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            _getShortcutModifier: function (ev) {\n                var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n                return mac ? ev.metaKey : ev.ctrlKey;\n            },\n            destroy: function () {\n                var that = this;\n                that.element.off(NS);\n            }\n        });\n        extend(kendo.ui.taskboard, { KeyboardManager: Keyboard });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.taskboard', [\n        'taskboard/toolbar',\n        'taskboard/column',\n        'taskboard/card',\n        'taskboard/cardmenu',\n        'taskboard/commands',\n        'taskboard/pane',\n        'taskboard/keyboard',\n        'kendo.data'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'taskboard',\n        name: 'TaskBoard',\n        category: 'web',\n        description: 'The TaskBoard widget displays cards.',\n        depends: [\n            'data',\n            'sortable',\n            'dialog',\n            'form',\n            'menu',\n            'toolbar'\n        ]\n    };\n    var TaskBoardStyles = {\n        wrapper: 'k-taskboard',\n        header: 'k-taskboard-header',\n        content: 'k-taskboard-content',\n        toolbar: 'k-taskboard-toolbar k-toolbar-flat',\n        columnsContainer: 'k-taskboard-columns-container',\n        card: 'k-taskboard-card',\n        column: 'k-taskboard-column',\n        selected: 'k-state-selected',\n        disabled: 'k-state-disabled',\n        ignoreDrag: 'k-taskboard-drag-ignore'\n    };\n    var preventDefault = function (ev) {\n        ev.preventDefault();\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, DataSource = kendo.data.DataSource, extend = $.extend, ui = kendo.ui, proxy = $.proxy, isArray = Array.isArray, isPlainObject = $.isPlainObject, GENERIC = '_generic', DOT = '.', MOVE = 'move', MOVE_START = 'moveStart', MOVE_END = 'moveEnd', SELECT = 'select', EXECUTE = 'execute', ACTION = 'action', CHANGE = 'change', ERROR = 'change', DATABINDING = 'dataBinding', DATABOUND = 'dataBound', EDIT_CARD = 'editCard', SAVE_CARD = 'saveCard', DELETE_CARD = 'deleteCard', EDIT_COLUMN = 'editColumn', SAVE_COLUMN = 'saveColumn', DELETE_COLUMN = 'deleteColumn', COLUMNSDATABINDING = 'columnsDataBinding', COLUMNSDATABOUND = 'columnsDataBound';\n        var TaskBoard = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                element = that.wrapper = that.element;\n                that._sortableIdentifier = that.element.attr('id') || kendo.guid();\n                that._wrapper();\n                that._columnsDataSource();\n                that._initResources();\n                that._dataSource();\n                that._initToolbar();\n                that._initCardMenu();\n                that._initKeyboard();\n                if (that.options.autoBind) {\n                    that.load();\n                }\n                kendo.notify(that);\n            },\n            events: [\n                MOVE,\n                MOVE_START,\n                MOVE_END,\n                CHANGE,\n                EXECUTE,\n                SELECT,\n                DATABINDING,\n                DATABOUND,\n                COLUMNSDATABINDING,\n                COLUMNSDATABOUND,\n                EDIT_CARD,\n                SAVE_CARD,\n                DELETE_CARD,\n                EDIT_COLUMN,\n                SAVE_COLUMN,\n                DELETE_COLUMN\n            ],\n            options: {\n                name: 'TaskBoard',\n                autoBind: true,\n                height: 600,\n                width: '100%',\n                toolbar: true,\n                dataStatusField: 'status',\n                dataTitleField: 'title',\n                dataDescriptionField: 'description',\n                dataCategoryField: 'category',\n                dataOrderField: null,\n                cardMenu: true,\n                editable: true,\n                selectable: true,\n                reorderable: true,\n                previewPane: true,\n                search: { operator: 'contains' },\n                dataSource: [],\n                columns: [],\n                columnSettings: {\n                    dataStatusField: 'status',\n                    dataTextField: 'text',\n                    dataOrderField: null\n                },\n                resources: [],\n                messages: {\n                    edit: 'Edit',\n                    createNewCard: 'Create new card',\n                    create: 'Create',\n                    search: 'Search',\n                    previewCard: 'Preview card',\n                    addCard: 'Add card',\n                    editCard: 'Edit card',\n                    deleteCard: 'Delete Card',\n                    addColumn: 'Add column',\n                    editColumn: 'Edit column',\n                    deleteColumn: 'Delete column',\n                    close: 'Close',\n                    cancel: 'Cancel',\n                    'delete': 'Delete',\n                    saveChanges: 'Save changes',\n                    title: 'Title:',\n                    description: 'Description:',\n                    newColumn: 'New column',\n                    deleteColumnConfirm: 'Are you sure you want to delete this column?',\n                    deleteCardConfirm: 'Are you sure you want to delete this card?'\n                }\n            },\n            items: function () {\n                var that = this, result = $([]);\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].cards());\n                }\n                return result;\n            },\n            itemsByStatus: function (status) {\n                var that = this, result = that._getColumn(status).cards();\n                return result;\n            },\n            itemsByColumn: function (columnElm) {\n                var that = this, column = that._getColumnByElement(columnElm);\n                if (column) {\n                    return column.cards();\n                }\n            },\n            load: function () {\n                var that = this, fetchPromises = [];\n                that._progress(true);\n                fetchPromises.push(that.columnsDataSource.fetch());\n                for (var key in that.resources) {\n                    fetchPromises.push(that.resources[key].dataSource.fetch());\n                }\n                $.when.apply(null, fetchPromises).then(proxy(that.dataSource.read, that.dataSource));\n            },\n            dataItem: function (cardElm) {\n                var that = this, dataSource = that.dataSource, uid;\n                cardElm = $(cardElm);\n                uid = cardElm.attr(kendo.attr('uid'));\n                return dataSource.getByUid(uid);\n            },\n            columnDataItem: function (columnElm) {\n                var that = this, columnsDataSource = that.columnsDataSource, uid;\n                columnElm = $(columnElm);\n                uid = columnElm.attr(kendo.attr('uid'));\n                return columnsDataSource.getByUid(uid);\n            },\n            columns: function () {\n                var that = this, result = $([]);\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].element);\n                }\n                return result;\n            },\n            columnByStatus: function (status) {\n                return this._getColumn(status).element;\n            },\n            select: function (card, toggle) {\n                var that = this;\n                if (!card) {\n                    return that.element.find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                }\n                card = $(card);\n                toggle = toggle !== false;\n                if (toggle) {\n                    that.element.find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).removeClass(TaskBoard.styles.selected);\n                }\n                card.toggleClass(TaskBoard.styles.selected, toggle);\n            },\n            previewCard: function (cardElement) {\n                var that = this, options = that.options, args = that._extendExecArgs({ target: cardElement });\n                if (options.previewPane) {\n                    that._openPane(extend({ pane: 'Preview' }, args));\n                }\n            },\n            editCard: function (cardElement) {\n                var that = this, options = that.options, args;\n                cardElement = $(cardElement);\n                args = that._extendExecArgs({ target: cardElement });\n                if (options.editable) {\n                    that._openPane(extend({ pane: 'Edit' }, args));\n                }\n            },\n            saveCard: function () {\n                var that = this;\n                that.dataSource.sync();\n            },\n            deleteCard: function (cardElement) {\n                var that = this, card = that.dataItem(cardElement);\n                that.dataSource.remove(card);\n                that.dataSource.sync();\n            },\n            addCard: function (dataItem) {\n                var that = this, options = that.options, args = { card: dataItem };\n                if (options.editable) {\n                    that._openPane(extend({ pane: 'Create' }, args));\n                }\n            },\n            addColumn: function (index, data) {\n                var that = this, columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }), newColumn, model, column;\n                if (isNaN(index) && !data) {\n                    data = index;\n                    index = null;\n                }\n                model = that.columnsDataSource._createNewModel(data);\n                index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                column = that.columns().eq(index);\n                that.columnsDataSource.insert(index, model);\n                newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n                if (isNaN(index) || !column.length) {\n                    that.columnsContainer.append(newColumn.element);\n                } else {\n                    column.before(newColumn.element);\n                }\n                newColumn.bind(ACTION, that.executeCommand.bind(that));\n            },\n            editColumn: function (columnElement) {\n                var that = this;\n                columnElement = $(columnElement);\n                that._getColumnByElement(columnElement).edit();\n            },\n            saveColumn: function () {\n                var that = this;\n                that.columnsDataSource.sync();\n            },\n            deleteColumn: function (columnElement) {\n                var that = this, column = that.columnDataItem(columnElement);\n                that.columnsDataSource.remove(column);\n                that.columnsDataSource.sync();\n            },\n            registerShortcut: function (selector, shortcut, options) {\n                var that = this;\n                that.keyboardManager.registerShortcut(selector, shortcut, options);\n            },\n            enable: function (cardElement, toggle) {\n                cardElement = $(cardElement);\n                cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                cardElement.attr('aria-disabled', toggle === false);\n            },\n            enableByColumn: function (columnElement, toggle) {\n                var that = this;\n                columnElement = $(columnElement);\n                that.itemsByColumn(columnElement).each(function (index, card) {\n                    that.enable(card, toggle);\n                });\n            },\n            readOnly: function (cardElement, toggle) {\n                cardElement = $(cardElement);\n                toggle = toggle !== false;\n                cardElement.find('[' + kendo.attr('command') + ']').toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.find('a,button').toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                cardElement.attr('aria-readonly', toggle);\n            },\n            readOnlyByColumn: function (columnElement, toggle) {\n                var that = this;\n                columnElement = $(columnElement);\n                that.itemsByColumn(columnElement).each(function (index, card) {\n                    that.readOnly(card, toggle);\n                });\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                if (that.options.autoBind) {\n                    that.dataSource.read();\n                }\n            },\n            setColumnsDataSource: function (dataSource) {\n                var that = this;\n                that.options.columns = dataSource;\n                that._columnsDataSource();\n                if (that.options.autoBind) {\n                    that.columnsDataSource.fetch(function () {\n                        that._renderCards(that.dataSource.view());\n                    });\n                }\n            },\n            _getColumn: function (status) {\n                return this._columns[status];\n            },\n            _getColumnByElement: function (columnElement) {\n                var that = this;\n                columnElement = $(columnElement);\n                for (var key in that._columns) {\n                    if (that._columns[key].element[0] === columnElement[0]) {\n                        return that._columns[key];\n                    }\n                }\n            },\n            _openPane: function (options) {\n                var that = this, pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, { states: that._buildStates() }), options.card, that.resources, options.column), focusableElement, keyboardManager;\n                if (that.pane) {\n                    that._closePane();\n                }\n                that.pane = pane;\n                that.content.after(that.pane.element);\n                that.content.css('margin-right', that.pane.element.outerWidth() - parseInt(that.content.css('paddingRight'), 10));\n                that.pane.bind(ACTION, that.executeCommand.bind(that));\n                that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n                keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                keyboardManager.registerShortcut('*', { keyCode: kendo.keys.ESC }, { command: 'ClosePaneCommand' });\n                keyboardManager.registerShortcut('*', { keyCode: kendo.keys.ENTER }, {\n                    command: 'SaveChangesCommand',\n                    options: { card: that.pane._dataItem }\n                });\n                focusableElement = that.pane.element.find('input');\n                if (!focusableElement.length) {\n                    focusableElement = that.pane.element.find('button');\n                }\n                setTimeout(function () {\n                    focusableElement.eq(0).trigger('focus');\n                }, 0);\n            },\n            _closePane: function () {\n                var that = this;\n                if (that.pane) {\n                    that.pane.keyboardManager.destroy();\n                    that.pane.unbind(ACTION);\n                    that.pane.destroy();\n                    delete that.pane;\n                    that.content.css('margin-right', '');\n                }\n            },\n            _wrapper: function () {\n                var that = this, options = that.options, styles = TaskBoard.styles, headerElm = '<div class=\\'' + styles.header + '\\'></div>', contentElm = '<div class=\\'' + styles.content + '\\'></div>', colsContainer = '<div class=\\'' + styles.columnsContainer + '\\'></div>';\n                that.element.addClass(styles.wrapper).width(options.width).height(options.height).attr('role', 'application');\n                that.header = $(headerElm).appendTo(that.element);\n                that.content = $(contentElm).appendTo(that.element);\n                that.columnsContainer = $(colsContainer).appendTo(that.content);\n            },\n            _initToolbar: function () {\n                var that = this, styles = TaskBoard.styles, options = that.options, toolbarElm = $('<div class=\\'' + styles.toolbar + '\\'></div>'), toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar;\n                if (options.toolbar === false) {\n                    return;\n                }\n                toolbarOptions = extend({}, toolbarOptions, {\n                    taskboard: this,\n                    messages: options.messages,\n                    action: that.executeCommand.bind(that),\n                    states: that._buildStates()\n                });\n                that.header.append(toolbarElm);\n                that.toolbar = new ui.taskboard.ToolBar(toolbarElm, toolbarOptions);\n            },\n            _buildStates: function () {\n                var that = this;\n                return {\n                    isEditable: that._isEditable(),\n                    isReorderable: that._isReorderable(),\n                    isSelectable: that._isSelectable(),\n                    isReadOnly: !that._isReorderable() && !that._isEditable(),\n                    isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                    isSearchable: that._isSearchable(),\n                    notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                    isRtl: kendo.support.isRtl(that.wrapper)\n                };\n            },\n            _isSearchable: function () {\n                return !!this.options.search;\n            },\n            _isEditable: function () {\n                return !!this.options.editable;\n            },\n            _isReorderable: function () {\n                return !!this.options.reorderable;\n            },\n            _isSelectable: function () {\n                return !!this.options.selectable;\n            },\n            executeCommand: function (args) {\n                var that = this, commandName = args.command, commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }), command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n                if (!that.trigger(EXECUTE, args)) {\n                    if (command) {\n                        command.exec();\n                    } else {\n                        window.console.warn(kendo.format('Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!', commandName));\n                    }\n                }\n            },\n            _extendExecArgs: function (args) {\n                var that = this, target = args.draggableEvent ? args.item : args.target, columnElm, cardElm, columnDataItem, cardDataItem;\n                if (args.card) {\n                    target = that.items().filter(function (idx, elm) {\n                        return $(elm).attr(kendo.attr('uid')) === args.card.get('uid');\n                    });\n                }\n                if (!target || !(target && target.length)) {\n                    return args;\n                }\n                columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + 'uid'));\n                cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + 'uid'));\n                return extend(args, {\n                    card: cardDataItem,\n                    cardElement: cardElm.length ? cardElm : undefined,\n                    column: columnDataItem,\n                    columnElement: columnElm.length ? columnElm : undefined\n                });\n            },\n            _select: function (card, toggle) {\n                var that = this;\n                if (toggle === null) {\n                    toggle = true;\n                }\n                if (!that.trigger(SELECT, { card: card })) {\n                    that.select(card, toggle);\n                    that.previewCard(card);\n                }\n            },\n            _columnsDataSource: function () {\n                var that = this, options = that.options, columnSettings = options.columnSettings, columnsDataSource = options.columns;\n                columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n                if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                    columnsDataSource.sort = {\n                        field: columnSettings.dataOrderField,\n                        dir: 'asc'\n                    };\n                }\n                if (!columnsDataSource.schema) {\n                    var fields = {};\n                    fields[columnSettings.dataStatusField] = {\n                        type: 'string',\n                        defaultValue: function () {\n                            return kendo.guid().split('-')[0];\n                        }\n                    };\n                    fields[columnSettings.dataTextField] = { type: 'string' };\n                    if (columnSettings.dataOrderField) {\n                        fields[columnSettings.dataOrderField] = { type: 'number' };\n                    }\n                    columnsDataSource.schema = { model: { fields: fields } };\n                }\n                if (that.columnsDataSource && that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                } else {\n                    that._columnsChangeHandler = proxy(that._columnsDataSourceChange, that);\n                    that._columnsErrorHandler = proxy(that._error, that);\n                }\n                that.columnsDataSource = DataSource.create(columnsDataSource).bind(CHANGE, that._columnsChangeHandler).bind(ERROR, that._columnsErrorHandler);\n            },\n            _columnsDataSourceChange: function (ev) {\n                var that = this, view = that.columnsDataSource.view(), columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }), statusField = columnSettings.dataStatusField;\n                if (ev.action && ev.action !== 'sync') {\n                    return;\n                }\n                if (that.trigger(COLUMNSDATABINDING, ev)) {\n                    return;\n                }\n                that._progress(true);\n                that._columns = {};\n                that.columnsContainer.html('');\n                for (var i = 0; i < view.length; i++) {\n                    var data = view[i];\n                    var status = data[statusField] || GENERIC;\n                    var column;\n                    column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                    that.columnsContainer.append(column.element);\n                    column.bind(ACTION, that.executeCommand.bind(that));\n                    column.bind(MOVE, proxy(that._move, that));\n                    column.bind(MOVE_END, proxy(that._moveEnd, that));\n                    column.bind(MOVE_START, proxy(that._moveStart, that));\n                    column.bind(CHANGE, proxy(that._changeOrder, that));\n                    that._tabindex(column.element);\n                }\n                if (ev.action === 'sync' || ev.action === undefined) {\n                    that._renderCards(that.dataSource.view());\n                }\n                that._progress(false);\n                that.trigger(COLUMNSDATABOUND, ev);\n            },\n            _move: function (ev) {\n                this.trigger(MOVE, this._extendExecArgs(ev));\n            },\n            _moveEnd: function (ev) {\n                this.trigger(MOVE_END, this._extendExecArgs(ev));\n            },\n            _moveStart: function (ev) {\n                this.trigger(MOVE_START, this._extendExecArgs(ev));\n            },\n            _changeOrder: function (ev) {\n                this.trigger(CHANGE, this._extendExecArgs(ev));\n            },\n            _dataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (options.dataOrderField && !dataSource.sort) {\n                    dataSource.sort = {\n                        field: options.dataOrderField,\n                        dir: 'asc'\n                    };\n                }\n                if (!dataSource.schema) {\n                    var fields = {};\n                    fields[options.dataStatusField] = { type: 'string' };\n                    fields[options.dataTitleField] = { type: 'string' };\n                    fields[options.dataDescriptionField] = { type: 'string' };\n                    fields[options.dataCategoryField] = { type: 'string' };\n                    if (options.dataOrderField) {\n                        fields[options.dataOrderField] = { type: 'number' };\n                    }\n                    dataSource.schema = { model: { fields: fields } };\n                }\n                if (that.dataSource && that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._changeHandler = proxy(that._change, that);\n                    that._errorHandler = proxy(that._error, that);\n                }\n                that.dataSource = DataSource.create(dataSource).bind(CHANGE, that._changeHandler);\n            },\n            _change: function (ev) {\n                var that = this;\n                if (ev.action && ev.action !== 'sync') {\n                    return;\n                }\n                if (that.trigger(DATABINDING, ev)) {\n                    return;\n                }\n                that._progress(true);\n                that._clearColumns();\n                that._renderCards(that.dataSource.view());\n                that._closePane();\n                that.trigger(DATABOUND, ev);\n                that._progress(false);\n            },\n            _error: function () {\n                this._progress(false);\n            },\n            _renderCards: function (data) {\n                var that = this;\n                for (var i = 0; i < data.length; i++) {\n                    that._renderCard(data[i]);\n                }\n            },\n            _renderCard: function (card) {\n                var that = this, options = extend({}, that.options, { states: that._buildStates() }), statusField = options.dataStatusField, status = card[statusField] || GENERIC;\n                if (status && that._columns[status]) {\n                    card = new ui.taskboard.Card(options, card, that.resources);\n                    that._columns[status].addCard(card.element);\n                    that._tabindex(card.element);\n                }\n            },\n            _clearColumns: function () {\n                var that = this;\n                for (var key in that._columns) {\n                    that._columns[key].empty();\n                }\n            },\n            _initCardMenu: function () {\n                var that = this, options = that.options, cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n                cardMenuOptions = extend({}, {\n                    messages: options.messages,\n                    target: that.columnsContainer,\n                    filter: '.k-taskboard-card-menu-button',\n                    action: that.executeCommand.bind(that),\n                    showOn: 'click',\n                    alignToAnchor: true,\n                    states: that._buildStates()\n                }, cardMenuOptions);\n                if (options.cardMenu === false) {\n                    return;\n                }\n                that.cardMenu = new ui.taskboard.CardMenu('<ul></ul>', cardMenuOptions);\n            },\n            _initResources: function () {\n                var that = this, resources = that.options.resources;\n                for (var i = 0; i < resources.length; i++) {\n                    that._addResource(resources[i]);\n                }\n            },\n            _addResource: function (resource) {\n                var that = this;\n                if (!that.resources) {\n                    that.resources = {};\n                }\n                that.resources[resource.field] = {\n                    field: resource.field,\n                    name: resource.name,\n                    title: resource.title || resource.field,\n                    dataTextField: resource.dataTextField || 'text',\n                    dataValueField: resource.dataValueField || 'value',\n                    dataColorField: resource.dataColorField || 'color',\n                    valuePrimitive: resource.valuePrimitive === false ? false : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(resource.dataSource)\n                };\n            },\n            _resourceDataSource: function (resourceDS) {\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS, dataSourceInstance = kendo.data.DataSource.create(dataSource);\n                return dataSourceInstance;\n            },\n            _progress: function (toggle) {\n                var that = this;\n                kendo.ui.progress(that.element, toggle);\n            },\n            _initKeyboard: function () {\n                var that = this;\n                that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n                that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                that._registerShortcuts();\n            },\n            _registerShortcuts: function () {\n                var that = this, states = that._buildStates();\n                if (states.isEditable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, { keyCode: kendo.keys.DELETE }, { command: 'DeleteColumnCommand' });\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: 'e',\n                        ctrlKey: true\n                    }, {\n                        command: 'EditColumnCommand',\n                        handler: preventDefault\n                    });\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: 'a',\n                        ctrlKey: true\n                    }, {\n                        command: 'AddCardCommand',\n                        handler: preventDefault\n                    });\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + ' *', { keyCode: kendo.keys.ESC }, { command: 'CancelEditColumnCommand' });\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, { keyCode: kendo.keys.DELETE }, { command: 'DeleteCardCommand' });\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: 'e',\n                        ctrlKey: true\n                    }, {\n                        command: 'EditCardCommand',\n                        handler: preventDefault\n                    });\n                }\n                if (states.isSelectable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, { keyCode: kendo.keys.ENTER }, {\n                        command: 'SelectCardCommand',\n                        handler: preventDefault\n                    });\n                }\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, { keyCode: kendo.keys.UP }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'up' },\n                    handler: preventDefault\n                });\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, { keyCode: kendo.keys.DOWN }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'down' },\n                    handler: preventDefault\n                });\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, { keyCode: kendo.keys.LEFT }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'left' },\n                    handler: preventDefault\n                });\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, { keyCode: kendo.keys.RIGHT }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'right' },\n                    handler: preventDefault\n                });\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, { keyCode: kendo.keys.LEFT }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'left' },\n                    handler: preventDefault\n                });\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, { keyCode: kendo.keys.RIGHT }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'right' },\n                    handler: preventDefault\n                });\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, { keyCode: kendo.keys.DOWN }, {\n                    command: 'MoveFocusCommand',\n                    options: { value: 'down' },\n                    handler: preventDefault\n                });\n            },\n            destroy: function () {\n                var that = this;\n                if (that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                }\n                if (that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n                for (var key in that._columns) {\n                    that._columns[key].destroy();\n                }\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n                if (that.cardMenu) {\n                    that.cardMenu.destroy();\n                }\n                if (that.keyboardManager) {\n                    that.keyboardManager.destroy();\n                }\n                if (that.pane) {\n                    that.closePane();\n                }\n                Widget.fn.destroy.call(that);\n            }\n        });\n        kendo.ui.plugin(TaskBoard);\n        extend(true, TaskBoard, { styles: TaskBoardStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}